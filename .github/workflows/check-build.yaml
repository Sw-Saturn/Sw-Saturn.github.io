name: Hugo Build Check

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_CACHEDIR: /tmp/hugo_cache
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Setup pnpm
        if: hashFiles('package.json') != ''
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "22"
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          # Install Tailwind CLI if package.json exists
          if [ -f "package.json" ]; then
            echo "Installing Tailwind dependencies..."
            pnpm install || npm install
          fi

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 0.150.0
          extended: true    # Use extended version for SCSS/SASS support

      # Cache dependencies (Go modules, node_modules) - stable, rarely changes
      - name: Cache Hugo modules
        uses: actions/cache@v4
        with:
          path: |
            /tmp/hugo_cache_runner/
            node_modules/
            modules/*/node_modules/
          key: ${{ runner.os }}-hugo-deps-${{ hashFiles('**/go.mod', '**/package-lock.json', '**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-hugo-deps-

      # Cache Hugo resources (processed images, CSS) - invalidates only when assets/config change
      - name: Cache Hugo resources
        uses: actions/cache@v4
        with:
          path: resources/
          key: ${{ runner.os }}-hugo-resources-${{ hashFiles('assets/**/*', 'config/**/*', 'hugo.yaml', 'package.json') }}
          restore-keys: |
            ${{ runner.os }}-hugo-resources-

      - name: Build
        run: hugo --minify

      - name: Check build status
        run: |
          if [ -d "./public" ]; then
            echo "✅ Hugo build successful!"
          else
            echo "❌ Hugo build failed!"
            exit 1
          fi
